{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Secret Projects\\\\Crypto Tees Updated\\\\frontend\\\\build\\\\src\\\\components\\\\screens\\\\CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { addToCart } from '../../actions/cartActions';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Collapsible from 'react-collapsible';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CartScreen(props) {\n  _s();\n\n  const [activeKey, setActiveKey] = useState(0);\n  const productId = props.match.params.id;\n  const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CHECKOUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2\",\n        children: /*#__PURE__*/_jsxDEV(Collapsible, {\n          trigger: \"Start here\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This is the collapsible content. It can be any element or React component you like.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"It can even be another Collapsible component. Check out the next section!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartScreen, \"dE3DRrtkBj/3EOh/MYSztiWXI94=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CartScreen;\nexport default CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Secret Projects/Crypto Tees Updated/frontend/build/src/components/screens/CartScreen.js"],"names":["React","useEffect","useState","addToCart","useDispatch","useSelector","Collapsible","CartScreen","props","activeKey","setActiveKey","productId","match","params","id","qty","location","search","Number","split","dispatch","cart","state","cartItems"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAMS,SAAS,GAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBC,EAArC;AACA,QAAMC,GAAG,GAAGP,KAAK,CAACQ,QAAN,CAAeC,MAAf,GAAwBC,MAAM,CAACV,KAAK,CAACQ,QAAN,CAAeC,MAAf,CAAsBE,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAD,CAA9B,GAAsE,CAAlF;AACA,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AACA,QAAMiB,IAAI,GAAGhB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAM;AAACE,IAAAA;AAAD,MAAcF,IAApB;AAEApB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGU,SAAH,EAAc;AACVS,MAAAA,QAAQ,CAACjB,SAAS,CAACQ,SAAD,EAAYI,GAAZ,CAAV,CAAR;AACH;AACJ,GAJQ,EAIN,CAACK,QAAD,EAAWT,SAAX,EAAsBI,GAAtB,CAJM,CAAT;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACA,QAAC,WAAD;AAAa,UAAA,OAAO,EAAC,YAArB;AAAA,kCACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADU,eAKV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALU;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,eAaI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GApCQR,U;UAIYH,W,EACJC,W;;;KALRE,U;AAsCT,eAAeA,UAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { addToCart } from '../../actions/cartActions';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Collapsible from 'react-collapsible';\r\n\r\n\r\nfunction CartScreen(props) {\r\n    const [activeKey, setActiveKey] = useState(0)\r\n    const productId = props.match.params.id\r\n    const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems} = cart\r\n\r\n    useEffect(() => {\r\n        if(productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <h1>CHECKOUT</h1>\r\n            <div className=\"row top\">\r\n                <div className=\"col-2\">\r\n                <Collapsible trigger=\"Start here\">\r\n      <p>\r\n        This is the collapsible content. It can be any element or React\r\n        component you like.\r\n      </p>\r\n      <p>\r\n        It can even be another Collapsible component. Check out the next\r\n        section!\r\n      </p>\r\n    </Collapsible>\r\n                </div>\r\n                <div className=\"col-1\">\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n"]},"metadata":{},"sourceType":"module"}