{"ast":null,"code":"import * as constants from \"../constants/cartConstants\";\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case constants.ADD_ITEM_TO_CART:\n      const item = action.payload;\n      const itemExists = state.cartItems.find(newItem => newItem.product === item.product);\n\n      if (itemExists) {\n        // update the amount of items in the cart. Replace existing items with new item qty\n        return { ...state,\n          cartItems: state.cartItems.map(cartItem => cartItem.product === itemExists.product ? item : cartItem)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case constants.REMOVE_ITEM_FROM_CART:\n      return { ...state,\n        cartItems: state.cartItems.filter(item => item.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Secret Projects/Crypto Tees Updated/frontend/build/src/reducers/cartReducers.js"],"names":["constants","cartReducer","state","cartItems","action","type","ADD_ITEM_TO_CART","item","payload","itemExists","find","newItem","product","map","cartItem","REMOVE_ITEM_FROM_CART","filter"],"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,4BAA3B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAACC,EAAAA,SAAS,EAAC;AAAX,CAAT,EAAyBC,MAAzB,KAAoC;AAC3D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,SAAS,CAACM,gBAAf;AACI,YAAMC,IAAI,GAAGH,MAAM,CAACI,OAApB;AACA,YAAMC,UAAU,GAAGP,KAAK,CAACC,SAAN,CAAgBO,IAAhB,CAAsBC,OAAD,IAAaA,OAAO,CAACC,OAAR,KAAoBL,IAAI,CAACK,OAA3D,CAAnB;;AACA,UAAGH,UAAH,EAAe;AACX;AACA,eAAO,EACH,GAAGP,KADA;AAEHC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,GAAhB,CAAoBC,QAAQ,IAAIA,QAAQ,CAACF,OAAT,KAAqBH,UAAU,CAACG,OAAhC,GAA0CL,IAA1C,GAAiDO,QAAjF;AAFR,SAAP;AAIH,OAND,MAMO;AACH,eAAO,EAAC,GAAGZ,KAAJ;AAAWC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBI,IAArB;AAAtB,SAAP;AACH;;AACL,SAAKP,SAAS,CAACe,qBAAf;AACI,aAAO,EAAC,GAAGb,KAAJ;AAAWC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBa,MAAhB,CAAwBT,IAAD,IAAUA,IAAI,CAACK,OAAL,KAAiBR,MAAM,CAACI,OAAzD;AAAtB,OAAP;;AACJ;AACI,aAAON,KAAP;AAhBR;AAkBH,CAnBM","sourcesContent":["import * as constants from \"../constants/cartConstants\"\r\n\r\nexport const cartReducer = (state = {cartItems:[]}, action) => {\r\n    switch(action.type) {\r\n        case constants.ADD_ITEM_TO_CART:\r\n            const item = action.payload\r\n            const itemExists = state.cartItems.find((newItem) => newItem.product === item.product)\r\n            if(itemExists) {\r\n                // update the amount of items in the cart. Replace existing items with new item qty\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(cartItem => cartItem.product === itemExists.product ? item : cartItem)\r\n                }\r\n            } else {\r\n                return {...state, cartItems: [...state.cartItems, item]}\r\n            }\r\n        case constants.REMOVE_ITEM_FROM_CART:\r\n            return {...state, cartItems: state.cartItems.filter((item) => item.product !== action.payload)}\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}