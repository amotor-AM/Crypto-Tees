{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Secret Projects\\\\Crypto Tees Updated\\\\frontend\\\\build\\\\src\\\\components\\\\screens\\\\CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { addToCart } from '../../actions/cartActions';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CAccordion, CAccordionBody, CAccordionButton, CAccordionCollapse, CAccordionHeader, CAccordionItem } from '@coreui/react'; // import '@coreui/dist/css/coreui.min.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CartScreen(props) {\n  _s();\n\n  const [activeKey, setActiveKey] = useState(0);\n  const productId = props.match.params.id;\n  const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CHECKOUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2\",\n        children: /*#__PURE__*/_jsxDEV(CAccordion, {\n          children: /*#__PURE__*/_jsxDEV(CAccordionItem, {\n            children: [/*#__PURE__*/_jsxDEV(CAccordionHeader, {\n              children: /*#__PURE__*/_jsxDEV(CAccordionButton, {\n                collapsed: activeKey !== 1,\n                onClick: () => activeKey === 1 ? setActiveKey(0) : setActiveKey(1),\n                children: \"Shipping Info\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CAccordionCollapse, {\n              visible: activeKey === 1,\n              children: /*#__PURE__*/_jsxDEV(CAccordionBody, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"This is the first item's accordion body.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 37\n                }, this), \" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: \".accordion-body\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 70\n                }, this), \", though the transition does limit overflow.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartScreen, \"dE3DRrtkBj/3EOh/MYSztiWXI94=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CartScreen;\nexport default CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Secret Projects/Crypto Tees Updated/frontend/build/src/components/screens/CartScreen.js"],"names":["React","useEffect","useState","addToCart","useDispatch","useSelector","CAccordion","CAccordionBody","CAccordionButton","CAccordionCollapse","CAccordionHeader","CAccordionItem","CartScreen","props","activeKey","setActiveKey","productId","match","params","id","qty","location","search","Number","split","dispatch","cart","state","cartItems"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,UAAT,EAAqBC,cAArB,EAAqCC,gBAArC,EAAuDC,kBAAvD,EAA2EC,gBAA3E,EAA6FC,cAA7F,QAAkH,eAAlH,C,CACA;;;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAMc,SAAS,GAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBC,EAArC;AACA,QAAMC,GAAG,GAAGP,KAAK,CAACQ,QAAN,CAAeC,MAAf,GAAwBC,MAAM,CAACV,KAAK,CAACQ,QAAN,CAAeC,MAAf,CAAsBE,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAD,CAA9B,GAAsE,CAAlF;AACA,QAAMC,QAAQ,GAAGrB,WAAW,EAA5B;AACA,QAAMsB,IAAI,GAAGrB,WAAW,CAACsB,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAM;AAACE,IAAAA;AAAD,MAAcF,IAApB;AAEAzB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGe,SAAH,EAAc;AACVS,MAAAA,QAAQ,CAACtB,SAAS,CAACa,SAAD,EAAYI,GAAZ,CAAV,CAAR;AACH;AACJ,GAJQ,EAIN,CAACK,QAAD,EAAWT,SAAX,EAAsBI,GAAtB,CAJM,CAAT;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACI,QAAC,UAAD;AAAA,iCACI,QAAC,cAAD;AAAA,oCACI,QAAC,gBAAD;AAAA,qCACI,QAAC,gBAAD;AACA,gBAAA,SAAS,EAAEN,SAAS,KAAK,CADzB;AAEA,gBAAA,OAAO,EAAE,MACPA,SAAS,KAAK,CAAd,GAAkBC,YAAY,CAAC,CAAD,CAA9B,GAAoCA,YAAY,CAAC,CAAD,CAHlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAWI,QAAC,kBAAD;AAAoB,cAAA,OAAO,EAAED,SAAS,KAAK,CAA3C;AAAA,qCACI,QAAC,cAAD;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,8XAOqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPrC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eA6BI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuCH;;GApDQF,U;UAIYR,W,EACJC,W;;;KALRO,U;AAsDT,eAAeA,UAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { addToCart } from '../../actions/cartActions';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { CAccordion, CAccordionBody, CAccordionButton, CAccordionCollapse, CAccordionHeader, CAccordionItem} from '@coreui/react';\r\n// import '@coreui/dist/css/coreui.min.css';\r\n\r\n\r\nfunction CartScreen(props) {\r\n    const [activeKey, setActiveKey] = useState(0)\r\n    const productId = props.match.params.id\r\n    const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems} = cart\r\n\r\n    useEffect(() => {\r\n        if(productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <h1>CHECKOUT</h1>\r\n            <div className=\"row top\">\r\n                <div className=\"col-2\">\r\n                    <CAccordion>\r\n                        <CAccordionItem>\r\n                            <CAccordionHeader>\r\n                                <CAccordionButton\r\n                                collapsed={activeKey !== 1}\r\n                                onClick={() =>\r\n                                  activeKey === 1 ? setActiveKey(0) : setActiveKey(1)\r\n                                }\r\n                              >\r\n                                  Shipping Info\r\n                              </CAccordionButton>\r\n                            </CAccordionHeader>\r\n                            <CAccordionCollapse visible={activeKey === 1}>\r\n                                <CAccordionBody>\r\n                                    <strong>This is the first item's accordion body.</strong> It is\r\n                                    hidden by default, until the collapse plugin adds the appropriate\r\n                                    classes that we use to style each element. These classes control\r\n                                    the overall appearance, as well as the showing and hiding via CSS\r\n                                    transitions. You can modify any of this with custom CSS or\r\n                                    overriding our default variables. It's also worth noting that just\r\n                                    about any HTML can go within the <code>.accordion-body</code>,\r\n                                    though the transition does limit overflow.\r\n                                </CAccordionBody> \r\n                            </CAccordionCollapse>\r\n                        </CAccordionItem>\r\n                    </CAccordion>  \r\n                </div>\r\n                <div className=\"col-1\">\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n"]},"metadata":{},"sourceType":"module"}